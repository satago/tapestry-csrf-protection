package at.porscheinformatik.tapestry.csrfprotection.tests.auto;

import static org.testng.Assert.assertTrue;

import java.util.List;

import at.porscheinformatik.tapestry.csrfprotection.util.PageTesterUtils;
import org.apache.tapestry5.dom.Document;
import org.apache.tapestry5.dom.Element;
import org.apache.tapestry5.test.PageTester;
import org.jaxen.JaxenException;
import org.testng.annotations.Test;

import com.formos.tapestry.xpath.TapestryXPath;

/**
 * Simulates a CSRF attack against the created event links of the AjaxFormLoop component.
 */
public class AjaxFormLoopAttackTest
{
    /**
     * Sends the request generated by the RemoveRowLink component without anti CSRF parameter.
     * 
     * @throws JaxenException .
     */
    @Test
    public void testAttackRemoveRowLink() throws JaxenException
    {
        PageTester tester = PageTesterUtils.autoModePageTester();

        tester.renderPage("AjaxFormLoop");
        org.apache.tapestry5.dom.Document doc = tester.renderPage("AjaxFormLoopAttack");
        List<Element> list = TapestryXPath.xpath("id('removeRowLink')").selectElements(doc);
        assertTrue(list.size() == 1,
            "There should be only one link with id removeRowLink");
        Element actionLink = list.get(0);
        Document response = tester.clickLink(actionLink);
        assertTrue(response.toString().contains("CSRF Attack detected"));
    }

    /**
     * Sends the request generated by the AddRowLink component without the anti CSRF parameter.
     * 
     * @throws JaxenException .
     */
    @Test
    public void testAttackAddRowLink() throws JaxenException
    {
        PageTester tester = PageTesterUtils.autoModePageTester();

        tester.renderPage("AjaxFormLoop");
        org.apache.tapestry5.dom.Document doc = tester.renderPage("AjaxFormLoopAttack");
        List<Element> list = TapestryXPath.xpath("id('addRowLink')").selectElements(doc);
        assertTrue(list.size() == 1,
            "There should be only one link with id removeRowLink");
        Element actionLink = list.get(0);
        Document response = tester.clickLink(actionLink);
        assertTrue(response.toString().contains("CSRF Attack detected"));
    }
}
